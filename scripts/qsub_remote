#!/bin/bash

#set -x
######################################################
# Run a castep job on a remote host using qsub
# by Martin Uhrin
#
# This script takes four parameters as shown below.
#
# Once running the script will submit the job to the
# remote host and poll it for competion periodically
#
# Usage: qsub_remote  [remote_host] [remote_dir] [job_file] [list of input files]

declare -r REMOTE_HOST=$1
declare -r REMOTE_DIR=$2
declare -r JOB_FILE=$3
shift 3
declare -ar INPUT_FILES=("$@")

# Interval between checking if job is finished (in seconds)
declare -r JOB_POLL_INTERVAL=60

declare -r RAND_FOLDER=`strings /dev/urandom | tr -dc [:alnum:] | head -c8`
declare -r WORK_DIR=$REMOTE_DIR/$RAND_FOLDER

# Make the remote directory and copy over the work files
ssh $REMOTE_HOST mkdir -p $WORK_DIR
scp ${INPUT_FILES[@]} $JOB_FILE $REMOTE_HOST:$WORK_DIR

declare -r JOBID=`ssh $REMOTE_HOST "cd $WORK_DIR; qsub $JOB_FILE"`

# Loop until the job finishes
finished=false
while ! $finished
do
  sleep $JOB_POLL_INTERVAL

  (ssh $REMOTE_HOST qstat $JOBID) < /dev/null 2>&1 | grep -q "Unknown Job Id"
  if [ "$?" -eq 0 ]
  then
    finished=true
  fi
done

# Copy everything back over
scp $REMOTE_HOST:$WORK_DIR/\* .

# Delete the remote working directory
ssh $REMOTE_HOST "if [ -d \"$WORK_DIR\" ]; then rm -r $WORK_DIR; fi"


